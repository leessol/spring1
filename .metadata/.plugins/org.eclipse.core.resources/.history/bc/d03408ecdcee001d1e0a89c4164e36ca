<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- //방법 1: 그때그때마다 연결 생성. 자원낭비 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" 
		/> <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" /> <property 
		name="username" value="hr" /> <property name="password" value="hr" /> </bean> -->



	<!-- 방법 2: DBCP - connection pool 이용 <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"> 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" 
		/> <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" /> <property 
		name="username" value="hr" /> <property name="password" value="hr" /> </bean> -->


	<!-- 방법 3: connection pool (JNDI) 이용 -->
	<!-- dataSource 1: DB 연동 부분 -->
	<jee:jndi-lookup id="dataSourceOriginal"
		jndi-name="jdbc/myoracle" resource-ref="true" />

	<!-- dataSource 2: 로그 설정 추가 -->
	<bean id="dataSource2"
		class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceOriginal" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"></property>
				<property name="sqlPrefix" value="[ SQL문장 ] "></property>
			</bean>
		</property>
	</bean>


	<!-- dataSource2에 대한 transaction 설정 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- sqlSessioFactory: 설정에 의해 sqlSession을 생성 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2"></property>
		<property name="configLocation"
			value="classpath:mybatis/sqlMapConfig.xml" />
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/*.xml" />
	</bean>

	<!-- sqlSession는 sql문을 가지고 있는 mapper를 실행 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>

</beans>
